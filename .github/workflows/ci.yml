name: CI

on:
  push:
    branches: [ main, develop, release/* ]
  pull_request:
    branches: [ main, develop, release/* ]

env:
  PYTHON_VERSION: "3.13"

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install UV
      run: pip install uv

    - name: Cache UV dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml', '**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: |
        uv sync --dev
        
    - name: Run Black (formatting check)
      run: uv run black --check --diff .

    - name: Run isort (import sorting check)
      run: uv run isort --check-only --diff .

    - name: Run flake8 (linting)
      run: uv run flake8 .
      continue-on-error: true

    - name: Run mypy (type checking)
      run: uv run mypy .
      continue-on-error: true  # Allow mypy to fail without stopping the workflow

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install UV
      run: pip install uv

    - name: Cache UV dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-${{ matrix.python-version }}-uv-${{ hashFiles('**/pyproject.toml', '**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-uv-

    - name: Install dependencies
      run: uv sync --dev

    - name: Run tests
      run: uv run pytest -v --cov=. --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Run Smoke Tests
      run: |
        uv add --dev pytest
        uv run pytest tests.py --disable-warnings --maxfail=1
    

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install UV
      run: pip install uv

    - name: Install dependencies
      run: uv sync --dev

    - name: Run safety check
      run: |
        uv add --dev safety
        uv run safety check
      continue-on-error: true

    - name: Run bandit security linter
      run: |
        uv add --dev bandit
        uv run bandit -r . -f json -o bandit-report.json
      continue-on-error: true

    - name: Upload bandit report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-report
        path: bandit-report.json

  docker-build:
    runs-on: ubuntu-latest
    needs: [lint-and-format, test]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: streamlit-apps:test
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Test Docker image
      run: |
        docker run --rm -d -p 8501:8501 --name test-app streamlit-apps:test
        sleep 10
        curl -f http://localhost:8501/_stcore/health || exit 1
        docker stop test-app

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v3
